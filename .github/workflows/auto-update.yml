name: Update Dependencies

on:
  schedule:
    - cron: 12 1 * * *
  workflow_dispatch:
  push:
    branches:
      - master
      - main

env:
  NIXPKGS_ALLOW_UNFREE: 1

jobs:
  configure:
    runs-on: x86_64-linux
    outputs:
      matrix: ${{ steps.set-matrix-outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: |
          set -euxo pipefail
          MATRIX="$(om ci gh-matrix --systems=x86_64-linux,aarch64-darwin | jq -c .)"
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  update-nix-packages:
    if: github.ref_name == github.event.repository.default_branch
    needs: configure
    strategy:
      matrix: ${{ fromJson(needs.configure.outputs.matrix) }}
      fail-fast: false
    runs-on: ${{ matrix.system }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Determinate Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Update Flakes
        run: nix flake update --accept-flake-config

      - name: Push changes
        if: runner.os == 'Linux'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          file_pattern: "flake.lock programs/nvim/lazy-lock.json"
          skip_checkout: false
          skip_dirty_check: false
          skip_fetch: false
          commit_message: "[ci] dependencies: auto-updated"
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"

      # - name: Install Omnix
      #   run: nix profile install nixpkgs#omnix

      # - name: Run Omnix
      #   run: om ci run --results=om.json

      # - name: Push to Cachix
      #   env:
      #     CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
      #     BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      #   if: env.BRANCH_NAME == 'master'
      #   run: |
      #     nix run github:juspay/cachix-push -- \
      #       --subflake omnix \
      #       --prefix "${BRANCH_NAME}" \
      #       --cache om \
      #       < $HOME/omci.json
  cachix-push:
    strategy:
      matrix: ${{ fromJson(needs.configure.outputs.matrix) }}
      fail-fast: false
    runs-on: ${{ matrix.system }}
    needs: update-nix-packages
    steps:
      - uses: actions/checkout@v4

      - name: Install Determinate Nix
        uses: DeterminateSystems/nix-installer-action@main

      - uses: cachix/cachix-action@v15
        with:
          name: saberzero1
          extraPullNames: devenv,nixpkgs,nix-community,cachix,om
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Install direnv (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y direnv

      - name: Install direnv (macOS)
        if: runner.os == 'macOS'
        run: brew install direnv

      - name: Load environment variables (Linux)
        if: runner.os == 'Linux'
        run: |
          direnv allow .
          direnv export gha > "$GITHUB_ENV"
          sudo hostnamectl set-hostname nixos

      - name: Load environment variables (macOS)
        if: runner.os == 'macOS'
        run: |
          direnv allow .
          direnv export gha > "$GITHUB_ENV"
          sudo scutil --set HostName Emiles-Macbook-Pro

      - name: Install omnix
        run: nix profile install nixpkgs#omnix

      - name: Build flake
        run: |
          om ci run \
          --systems "${{ matrix.system }}" \
          ".#default.${{ matrix.subflake }}" \
          --extra-access-tokens "github.com=${{ secrets.GITHUB_TOKEN }}"
