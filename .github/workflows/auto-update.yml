name: Update Dependencies

on:
  schedule:
    - cron: 12 1 * * *
  workflow_dispatch:
  push:
    branches:
      - master
      - main

env:
  NIXPKGS_ALLOW_UNFREE: 1

jobs:
  update-nix-packages:
    if: github.ref_name == github.event.repository.default_branch
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            system: x86_64-linux
          # - runner: macos-latest
          #   system: aarch64-darwin
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Determinate Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Install direnv
        run: sudo apt-get update && sudo apt-get install -y direnv

      - name: Install omnix
        run: nix profile install nixpkgs#omnix

      - name: Load environment variables
        run: |
          direnv allow .
          direnv export gha > "$GITHUB_ENV"
          sudo hostnamectl set-hostname nixos

      - name: Omnix update flakes
        run: |
          om ci run .#update \
            --extra-access-tokens ${{ secrets.GITHUB_TOKEN }} \

      - name: Push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          file_pattern: "flake.lock programs/nvim/lazy-lock.json"
          skip_checkout: false
          skip_dirty_check: false
          skip_fetch: false
          commit_message: "[ci] dependencies: auto-updated"
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"

      # - name: Install Omnix
      #   run: nix profile install nixpkgs#omnix

      # - name: Run Omnix
      #   run: om ci run --results=om.json

      # - name: Push to Cachix
      #   env:
      #     CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
      #     BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      #   if: env.BRANCH_NAME == 'master'
      #   run: |
      #     nix run github:juspay/cachix-push -- \
      #       --subflake omnix \
      #       --prefix "${BRANCH_NAME}" \
      #       --cache om \
      #       < $HOME/omci.json
  cachix-push:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            system: x86_64-linux
          - runner: macos-latest
            system: aarch64-darwin
    needs: update-nix-packages
    steps:
      - name: "Optimize Disk Space"
        uses: "hugoalh/disk-space-optimizer-ghaction@v0.8.0"
        with:
          operate_sudo: "True"
          general_include: ".+"
          docker_include: ".+"
          docker_prune: "True"
          docker_clean: "True"
          apt_prune: "True"
          apt_clean: "True"
          homebrew_prune: "True"
          homebrew_clean: "True"
          npm_prune: "True"
          npm_clean: "True"
          os_swap: "True"

      - uses: actions/checkout@v4

      - name: Install Determinate Nix
        uses: DeterminateSystems/nix-installer-action@main

      - uses: cachix/cachix-action@v15
        with:
          name: saberzero1
          extraPullNames: devenv,nixpkgs,nix-community,cachix,om
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Install direnv (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y direnv

      - name: Install direnv (macOS)
        if: runner.os == 'macOS'
        run: brew install direnv

      - name: Install omnix
        run: nix profile install nixpkgs#omnix

      - name: Load environment variables (Linux)
        if: runner.os == 'Linux'
        run: |
          direnv allow .
          direnv export gha > "$GITHUB_ENV"
          sudo hostnamectl set-hostname nixos

      - name: Load environment variables (macOS)
        if: runner.os == 'macOS'
        run: |
          direnv allow .
          direnv export gha > "$GITHUB_ENV"
          sudo scutil --set HostName Emiles-Macbook-Pro

      - name: Omnix build flakes
        run: |
          om ci run .#build \
            --extra-access-tokens ${{ secrets.GITHUB_TOKEN }} \
            --systems "${{ matrix.system }}" \
            --results=$HOME/omci.json \
            -- --accept-flake-config

      # - name: Build (Linux)
      #   if: runner.os == 'Linux'
      #   run: nix flake show --json | jq '.packages."x86_64-linux"|keys[]'| xargs -I {} nix build .#{} --accept-flake-config --impure
      #
      # - name: Build (macOS)
      #   if: runner.os == 'macOS'
      #   run: nix flake show --json | jq '.packages."aarch64-darwin"|keys[]'| xargs -I {} nix build .#{} --accept-flake-config --impure
      #
      # - name: Build flake (Linux)
      #   if: runner.os == 'Linux'
      #   run: |
      #     om ci run \
      #     --systems "x86_64-linux" \
      #     ".#default.ROOT" \
      #     --extra-access-tokens "github.com=${{ secrets.GITHUB_TOKEN }}" \
      #     -- \
      #     --accept-flake-config \
      #     --impure
      #
      # - name: Build flake (macOS)
      #   if: runner.os == 'macOS'
      #   run: |
      #     om ci run \
      #     --systems "aarch64-darwin" \
      #     ".#default.ROOT" \
      #     --extra-access-tokens "github.com=${{ secrets.GITHUB_TOKEN }}" \
      #     -- \
      #     --accept-flake-config \
      #     --impure
